{"version":3,"sources":["components/section/section.js","components/statistic/statistic.js","components/buttons/feedbackOptions.js","components/notification/notification.js","App.js","index.js"],"names":["Section","title","children","className","prototype","PropTypes","string","node","Statistic","good","neutral","bad","total","positivePercentage","func","FeedbackOptions","options","onLeaveFeedback","buttonsName","Object","keys","map","button","type","name","onClick","array","Notification","message","App","state","handleButton","evt","targetValue","currentTarget","setState","prevS","countTotalFeedback","countPositiveFeedbackPercentage","totalFeed","goodFeed","totalPositive","Number","parseInt","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0VAIMA,G,MAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,oCACE,oBAAIC,UAAU,QAAd,SAAuBF,IACtBC,OAILF,EAAQI,UAAY,CAClBH,MAAOI,IAAUC,OACjBJ,SAAUG,IAAUE,MAGPP,Q,MCZf,SAASQ,EAAT,GAAuE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC9C,OACE,8BACE,qBAAIV,UAAU,YAAd,UACE,oBAAIA,UAAU,OAAd,SACE,uCAAUM,OAEZ,6BACE,0CAAaC,OAEf,6BACE,sCAASC,OAEX,6BACE,wCAAWC,OAEb,6BACE,oDAAuBC,EAAmBD,EAAOH,aAO3DD,EAAUJ,UAAY,CACpBK,KAAMJ,IAAUC,OAChBI,QAASL,IAAUC,OACnBK,IAAKN,IAAUC,OACfM,MAAOP,IAAUC,OACjBO,mBAAoBR,IAAUS,MAGjBN,Q,MChCf,SAASO,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAC5BC,EAAcC,OAAOC,KAAKJ,GAEhC,OACE,8BACE,oBAAIb,UAAU,UAAd,SACGe,EAAYG,KAAI,SAACC,GAAD,OACf,oBAAInB,UAAU,OAAd,SACE,wBACEA,UAAU,MACVoB,KAAK,SACLC,KAAMF,EACNG,QAASR,EAJX,SAMGK,KAPqBA,UAgBpCP,EAAgBX,UAAY,CAC1BY,QAASX,IAAUqB,MACnBT,gBAAiBZ,IAAUS,MAGdC,Q,MC5Bf,SAASY,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,oBAAIzB,UAAU,eAAd,SAA8ByB,IAGvCD,EAAavB,UAAY,CACvBwB,QAASvB,IAAUC,QAGNqB,QC+CAE,G,kNAnDbC,MAAQ,CACNrB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPoB,aAAe,SAACC,GACd,IAAMC,EAAcD,EAAIE,cAAcV,KACtC,EAAKW,UAAS,SAACC,GAAD,sBACXH,EAAcG,EAAMH,GAAe,O,EAIxCI,mBAAqB,WACnB,OAAO,EAAKP,MAAMrB,KAAO,EAAKqB,MAAMpB,QAAU,EAAKoB,MAAMnB,K,EAG3D2B,gCAAkC,SAACC,EAAWC,GAC5C,IAAMC,EAA4B,IAAXD,EAAkBD,EACzC,OAAqB,IAAdA,EAAkB,EAAIG,OAAOC,SAASF,GAAiB,M,uDAI9D,OACE,sBAAKtC,UAAU,OAAf,UACE,oBAAIA,UAAU,OAAd,6BACA,cAAC,EAAD,CAASF,MAAM,wBAAf,SACE,cAAC,EAAD,CACEe,QAAS4B,KAAKd,MACdb,gBAAiB2B,KAAKb,iBAI1B,cAAC,EAAD,CAAS9B,MAAM,YAAf,SACiC,IAA9B2C,KAAKP,qBACJ,cAAC,EAAD,CAAcT,QAAQ,sBAEtB,cAAC,EAAD,CACEnB,KAAMmC,KAAKd,MAAMrB,KACjBC,QAASkC,KAAKd,MAAMpB,QACpBC,IAAKiC,KAAKd,MAAMnB,IAChBC,MAAOgC,KAAKP,qBACZxB,mBAAoB+B,KAAKN,2C,GA3CrBO,cCHlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8ed90e17.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./section.css\";\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section>\r\n    <h2 className=\"title\">{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.prototype = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./statistic.css\";\r\n\r\nfunction Statistic({ good, neutral, bad, total, positivePercentage }) {\r\n  return (\r\n    <div>\r\n      <ul className=\"statistic\">\r\n        <li className=\"item\">\r\n          <p>Good: {good}</p>\r\n        </li>\r\n        <li>\r\n          <p>Neutral: {neutral}</p>\r\n        </li>\r\n        <li>\r\n          <p>Bad: {bad}</p>\r\n        </li>\r\n        <li>\r\n          <p>Total: {total}</p>\r\n        </li>\r\n        <li>\r\n          <p>Positive Feedback: {positivePercentage(total, good)}</p>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nStatistic.prototype = {\r\n  good: PropTypes.string,\r\n  neutral: PropTypes.string,\r\n  bad: PropTypes.string,\r\n  total: PropTypes.string,\r\n  positivePercentage: PropTypes.func,\r\n};\r\n\r\nexport default Statistic;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./feedbackOptions.css\";\r\n\r\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\r\n  const buttonsName = Object.keys(options);\r\n\r\n  return (\r\n    <div>\r\n      <ul className=\"buttons\">\r\n        {buttonsName.map((button) => (\r\n          <li className=\"item\" key={button}>\r\n            <button\r\n              className=\"btn\"\r\n              type=\"button\"\r\n              name={button}\r\n              onClick={onLeaveFeedback}\r\n            >\r\n              {button}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nFeedbackOptions.prototype = {\r\n  options: PropTypes.array,\r\n  onLeaveFeedback: PropTypes.func,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./notification.css\";\r\n\r\nfunction Notification({ message }) {\r\n  return <h2 className=\"notification\">{message}</h2>;\r\n}\r\n\r\nNotification.prototype = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\nimport Section from \"./components/section/section\";\nimport Statistic from \"./components/statistic/statistic\";\nimport FeedbackOptions from \"./components/buttons/feedbackOptions\";\nimport Notification from \"./components/notification/notification\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleButton = (evt) => {\n    const targetValue = evt.currentTarget.name;\n    this.setState((prevS) => ({\n      [targetValue]: prevS[targetValue] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n\n  countPositiveFeedbackPercentage = (totalFeed, goodFeed) => {\n    const totalPositive = (goodFeed * 100) / totalFeed;\n    return totalFeed === 0 ? 0 : Number.parseInt(totalPositive) + \" %\";\n  };\n\n  render() {\n    return (\n      <div className=\"main\">\n        <h1 className=\"name\">cafe 'Expresso'</h1>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.handleButton}\n          />\n        </Section>\n\n        <Section title=\"Statistic\">\n          {this.countTotalFeedback() === 0 ? (\n            <Notification message=\"No feedback given\" />\n          ) : (\n            <Statistic\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage}\n            />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}